{"version":3,"sources":["components/DadosGerais.js","components/Etapa2.js","components/Etapa3.js","components/EtapaFinal.js","App.js","serviceWorker.js","index.js"],"names":["DadosGerais","type","value","selected","disabled","onClick","this","props","irParaEtapa2","React","Component","Etapa2","irParaEtapa3","Etapa3","irParaEtapaFinal","EtapaFinal","AppMain","styled","div","App","state","pagina","onClickPróximaEtapa","setState","console","log","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"oQA4BeA,G,4KAtBX,OACE,8BACE,sDACA,oDACA,2BAAOC,KAAK,SACZ,qDACA,2BAAOA,KAAK,SACZ,sDACA,2BAAOA,KAAK,SACZ,4DACA,gCACE,4BAAQC,MAAM,GAAGC,UAAQ,EAACC,UAAQ,GAAlC,uCACA,4BAAQF,MAAM,yBAAd,8BACA,4BAAQA,MAAM,uBAAd,4BACA,4BAAQA,MAAM,4BAAd,8BACA,4BAAQA,MAAM,0BAAd,6BAEF,4BAAQG,QAASC,KAAKC,MAAMC,cAA5B,yB,GApBkBC,IAAMC,YCgBjBC,E,uKAbX,OACE,8BACE,8EACA,iDACA,2BAAOV,KAAK,SACZ,+DACA,2BAAOA,KAAK,SACZ,4BAAQI,QAASC,KAAKC,MAAMK,cAA5B,yB,GAVaH,IAAMC,WCqBZG,E,uKAlBX,OACE,8BACE,4EACA,kGACA,2BAAOZ,KAAK,SACZ,2EACA,gCACE,4BAAQC,MAAO,GAAGC,UAAQ,EAACC,UAAQ,GAAnC,2BACA,4BAAQF,MAAM,UAAd,UACA,4BAAQA,MAAM,WAAd,oBACA,4BAAQA,MAAM,UAAd,uBAEF,4BAAQG,QAASC,KAAKC,MAAMO,kBAA5B,yB,GAfaL,IAAMC,WCWZK,E,uKATX,OACE,8BACE,sDACA,+F,GALiBN,IAAMC,W,gGCI/B,IAAMM,E,MAAUC,EAAOC,IAAV,KA8BEC,E,4MAzBbC,MAAQ,CACNC,OAAQ,G,EAGVC,yBAAsB,WACpB,EAAKC,SAAU,CACbF,OAAQ,EAAKD,MAAMC,OAAS,IAE9BG,QAAQC,IAAI,EAAKL,MAAMC,S,uDAIvB,OACE,kBAACL,EAAD,KACuB,IAAtBV,KAAKc,MAAMC,QAAgB,kBAAC,EAAD,CAAab,aAAcF,KAAKgB,2BACrC,IAAtBhB,KAAKc,MAAMC,QAAgB,kBAAC,EAAD,CAAQT,aAAcN,KAAKgB,2BAChC,IAAtBhB,KAAKc,MAAMC,QAAgB,kBAAC,EAAD,CAAQP,iBAAkBR,KAAKgB,2BACpC,IAAtBhB,KAAKc,MAAMC,QAAgB,kBAAC,EAAD,CAAYP,iBAAkBR,KAAKgB,gC,GAlBnDb,IAAMC,WCCJgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLnB,QAAQmB,MAAMA,EAAMC,a","file":"static/js/main.fb082d16.chunk.js","sourcesContent":["import React from 'react';\r\nimport './etapas.css'\r\n\r\nclass DadosGerais extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <main>\r\n        <h3>ETAPA 1 - DADOS GERAIS</h3>\r\n        <label>1. Qual seu nome?</label>\r\n        <input type='text'/>\r\n        <label>2. Qual sua idade?</label>\r\n        <input type='text'/>\r\n        <label>3. Qual seu e-mail?</label>\r\n        <input type='text'/>\r\n        <label>4. Qual sua escolaridade?</label>\r\n        <select>\r\n          <option value='' selected disabled>Escolha uma das opções abaixo</option>\r\n          <option value='ensinoMedioIncompleto'>Ensino médio incompleto</option>\r\n          <option value='ensinoMedioCompleto'>Ensino médio completo</option>\r\n          <option value='ensinoSuperiorIncompleto'>Ensino Superior incompleto</option>\r\n          <option value='ensinoSuperiorCompleto'>Ensino Superior completo</option>\r\n        </select>\r\n        <button onClick={this.props.irParaEtapa2}>Próxima etapa</button>\r\n      </main>\r\n    )\r\n  }\r\n}\r\nexport default DadosGerais;\r\n","import React from 'react'\r\nimport './etapas.css'\r\n\r\nclass Etapa2 extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <main>\r\n        <h3>ETAPA 2 - INFORMAÇÕES DO ENSINO SUPERIOR</h3>\r\n        <label>5. Qual curso?</label>\r\n        <input type='text' />\r\n        <label>6. Qual a unidade de ensino?</label>\r\n        <input type='text' />\r\n        <button onClick={this.props.irParaEtapa3}>Próxima etapa</button>\r\n      </main>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Etapa2;","import React from 'react'\r\nimport './etapas.css'\r\n\r\nclass Etapa3 extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <main>\r\n        <h3>ETAPA 3 - INFORMAÇÕES GERAIS DE ENSINO</h3>\r\n        <label>5. Por que você não terminou um curso de graduação?</label>\r\n        <input type='text' />\r\n        <label>6. Você fez algum curso complementar?</label>\r\n        <select>\r\n          <option value ='' selected disabled>Escolha uma opção</option>\r\n          <option value='nenhum'>Nenhum</option>\r\n          <option value='tecnico'>Curso técnico</option>\r\n          <option value='ingles'>Curso de inglês</option>\r\n        </select>\r\n        <button onClick={this.props.irParaEtapaFinal}>Próxima etapa</button>\r\n      </main>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Etapa3","import React from 'react'\r\nimport './etapas.css'\r\n\r\nclass EtapaFinal extends React.Component {\r\n  render() {\r\n    return (\r\n      <main>\r\n        <h3>O FORMULÁRIO ACABOU</h3>\r\n        <p>Obrigado pela sua participação. Aguarde nosso contato</p>\r\n      </main>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EtapaFinal","import React from 'react';\nimport DadosGerais from './components/DadosGerais'\nimport Etapa2 from './components/Etapa2'\nimport Etapa3 from './components/Etapa3'\nimport EtapaFinal from './components/EtapaFinal'\nimport styled from 'styled-components'\n\nconst AppMain = styled.div `\n  text-align: center;\n  `\n\nclass App extends React.Component {\n  state = {\n    pagina: 1\n  };\n\n  onClickPróximaEtapa = () => {\n    this.setState ({\n      pagina: this.state.pagina + 1\n    })\n    console.log(this.state.pagina)\n  }\n  \n  render() {\n    return (\n      <AppMain>\n      {this.state.pagina === 1 && <DadosGerais irParaEtapa2={this.onClickPróximaEtapa}/>}\n      {this.state.pagina === 2 && <Etapa2 irParaEtapa3={this.onClickPróximaEtapa} />}\n      {this.state.pagina === 3 && <Etapa3 irParaEtapaFinal={this.onClickPróximaEtapa} />}\n      {this.state.pagina === 4 && <EtapaFinal irParaEtapaFinal={this.onClickPróximaEtapa} />}\n      </AppMain>\n        )\n      }\n      \n    \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}