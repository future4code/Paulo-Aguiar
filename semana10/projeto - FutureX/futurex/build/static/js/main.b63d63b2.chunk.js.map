{"version":3,"sources":["components/Home/Home.js","components/admin/LoginPage.js","components/hooks/useProtectedPage.js","components/admin/CreateTripPage.js","components/hooks/useForm.js","components/ListTripsPage.js","components/admin/TripDetailsPage.js","components/ApplicationFormPage.js","components/admin/EditListTripsPage.js","Router.js","App.js","serviceWorker.js","index.js"],"names":["Home","history","useHistory","onClick","push","LoginPage","useState","user","setUser","password","setPassword","tokenPass","setTokenPass","useEffect","window","localStorage","getItem","value","placeholder","onChange","event","target","type","body","email","axios","post","then","response","setItem","data","token","alert","catch","error","errorType","message","removeItem","useProtectedPage","CreateTripPage","initialValues","form","setForm","name","newForm","resetForm","useForm","planet","date","description","durationInDays","onChangeInput","onSubmit","preventDefault","console","log","inputprops","pattern","title","required","inputProps","disabled","map","ListTripsPage","TripDetailsPage","ApplicationFormPage","Router","exact","path","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b63d63b2.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction Home() {\r\n  const history = useHistory()\r\n  function goToLoginPage() {\r\n    history.push('/login')\r\n  }\r\n  function goToListTripsPage() {\r\n    history.push('/trips/list')\r\n  }\r\n  \r\n  return (\r\n    <main>\r\n      <h1>Home</h1>\r\n      <button onClick={goToLoginPage}>Fazer Login</button>\r\n      <button onClick={goToListTripsPage}>Ver viagens disponíveis</button>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Home","import React, {useState, useEffect} from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nfunction LoginPage() {\r\n  const [user, setUser] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [tokenPass, setTokenPass] = useState(false)\r\n\r\n  const history = useHistory()\r\n\r\n  function goToEditTripsList() {\r\n    history.push('/trips/edit')\r\n  }\r\n  function goToCreateTrip() {\r\n    history.push('/trips/create')\r\n  }\r\n\r\n  function onChangeUser(event) {\r\n    setUser(event.target.value)\r\n  }\r\n\r\n  function onChangePassword(event) {\r\n    setPassword(event.target.value)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const token = window.localStorage.getItem('token')\r\n    token && setTokenPass(true)\r\n  },[])\r\n\r\n  function logOutAdmin() {\r\n    window.localStorage.removeItem('token')\r\n    setTokenPass(false)\r\n  }\r\n\r\n  function loginAdmin() {\r\n    const aluno = 'paulo-machado-mello'\r\n    const body = {\r\n      email: user,\r\n      password: password\r\n    }\r\n    \r\n    axios.post('https://us-central1-labenu-apis.cloudfunctions.net/labeX/'+ aluno +'/login', body)\r\n      .then((response) => {\r\n        window.localStorage.setItem('token', response.data.token)\r\n        window.alert(`admin ${user} logado com sucesso`)\r\n        setTokenPass(true)\r\n      })\r\n      .catch((error) => {\r\n        const errorType = error.response.data.message\r\n        window.alert(errorType)\r\n        errorType === 'Senha incorreta' ? \r\n        setPassword('') :\r\n        setUser('')\r\n        setPassword('')\r\n      })\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <h1>Login</h1>\r\n      <input \r\n        value={user} \r\n        placeholder='usuário' \r\n        onChange={onChangeUser} \r\n      />\r\n      <input \r\n        value={password} \r\n        placeholder='senha' \r\n        type='password'\r\n        onChange={onChangePassword}\r\n      />\r\n      <button onClick={loginAdmin}>Fazer login</button>\r\n      {tokenPass &&\r\n      <div>\r\n        <button onClick={goToEditTripsList}>Listar viagens</button>\r\n        <button onClick={goToCreateTrip}>Criar viagem</button>\r\n        <button onClick={logOutAdmin}>Logout</button>\r\n      </div>}\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default LoginPage","import React, {useEffect} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nexport function useProtectedPage() {\r\n  const history = useHistory()\r\n  \r\n  useEffect(() => { \r\n    const token = window.localStorage.getItem('token')\r\n    if(!token) {\r\n      window.alert('Você precisa estar logado para acessar esta página')\r\n      history.push('/login')\r\n    } \r\n  }, [history])\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {useProtectedPage} from '../hooks/useProtectedPage'\r\nimport {useForm} from '../hooks/useForm'\r\n\r\nfunction CreateTripPage() {\r\n  useProtectedPage()\r\n  const {form, onChange, resetForm} = useForm({\r\n    name:'',\r\n    planet:'',\r\n    date:'',\r\n    description:'',\r\n    durationInDays:''\r\n  })\r\n\r\n  function submit(event) {\r\n    event.preventDefault()\r\n    console.log(form)\r\n  }\r\n\r\n  const onChangeInput = (event) => {\r\n    const {name, value} = event.target\r\n    onChange(name, value)\r\n  }\r\n\r\n  const planetsList = ['Mercúrio', 'Vênus', 'Marte', 'Júpiter', 'Saturno', 'Urano', 'Netuno', 'Plutão' ]\r\n\r\n  return (\r\n    <main>\r\n      <h1>Create Trip</h1>\r\n      <form onSubmit={submit}>\r\n        <label>Nome</label>\r\n        <input \r\n          value={form.name}\r\n          onChange={onChangeInput}\r\n          name='name'\r\n          type='text'\r\n          inputprops={{\r\n            pattern: '[A-Za-z]{5,}',\r\n            title: 'O nome precisa ter ao menos 5 letras'\r\n          }}\r\n          required\r\n        />\r\n\r\n        <label>Planeta</label>\r\n        <select\r\n          value={form.planet}\r\n          onChange={onChangeInput}\r\n          name='planet'\r\n          type='text'\r\n          inputProps={{\r\n            title: 'Escolha um planeta da lista'\r\n          }}\r\n          required\r\n        >\r\n        <option  disabled>Escolha um planeta</option>\r\n        {planetsList.map((planet) => {\r\n          return (\r\n            <option>{planet}</option>\r\n          )\r\n        })}\r\n        </select> \r\n\r\n        <label>Data:</label>\r\n        <input \r\n          value={form.date}\r\n          onChange={onChangeInput}\r\n          name='date'\r\n          type='date'\r\n          inputProps={{\r\n            pattern: '{01/01/2021,}',\r\n            title: 'Escolha uma data futura'\r\n          }}\r\n          required\r\n        />\r\n\r\n        <label>Descrição da viagem:</label>\r\n        <input \r\n          value={form.description}\r\n          onChange={onChangeInput}\r\n          name='description'\r\n          type='text'\r\n          inputProps={{\r\n            pattern: '{30,}',\r\n            title: 'A descrição deve ter o mínimo de 30 letras'\r\n          }}\r\n          required\r\n        />\r\n\r\n        <label>Duração</label>\r\n        <input \r\n          value={form.durationInDays}\r\n          onChange={onChangeInput}\r\n          name='durationInDays'\r\n          type='number'\r\n          inputProps={{\r\n            pattern: '{50,}',\r\n            title: 'Escolha uma data futura'\r\n          }}\r\n          required\r\n        />\r\n        <button type='submit'>Criar nova viagem</button>\r\n      </form>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default CreateTripPage","import React, {useState} from 'react'\r\n\r\nexport function useForm(initialValues) {\r\n  const [form, setForm] = useState(initialValues)\r\n\r\n  const onChange = (name, value) => {\r\n    const newForm = {...form, [name]: value}\r\n    setForm(newForm)\r\n  }\r\n\r\n  const resetForm = () => {\r\n    setForm(initialValues)\r\n  }\r\n\r\n  return {form, onChange, resetForm}\r\n}\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction ListTripsPage() {\r\n  const history = useHistory()\r\n\r\n  function goToApplicationForm() {\r\n    history.push('/application-form')\r\n  }\r\n  return (\r\n    <main>\r\n      <h1>Lista de viagens disponíveis para o usuário</h1>\r\n      <button onClick={goToApplicationForm}>Candidatar-se</button>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default ListTripsPage","import React from 'react'\r\nimport {useProtectedPage} from '../hooks/useProtectedPage'\r\n\r\nfunction TripDetailsPage() {\r\n  useProtectedPage()\r\n  \r\n  return (\r\n    <main>\r\n      <h1>Trip Details</h1>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default TripDetailsPage","import React from 'react'\r\n\r\nfunction ApplicationFormPage() {\r\n  return (\r\n    <main>\r\n      <h1>Application form</h1>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default ApplicationFormPage","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {useProtectedPage} from '../hooks/useProtectedPage'\r\n\r\nfunction ListTripsPage() {\r\n  useProtectedPage()\r\n\r\n  return (\r\n    <main>\r\n      <h1>Lista de viagens disponíveis para o admin editar</h1>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default ListTripsPage","import React from 'react'\r\nimport {Switch, Route, BrowserRouter, useHistory} from 'react-router-dom'\r\nimport Home from './components/Home/Home'\r\nimport LoginPage from './components/admin/LoginPage'\r\nimport CreateTripPage from './components/admin/CreateTripPage'\r\nimport ListTripsPage from './components/ListTripsPage'\r\nimport TripDetailsPage from './components/admin/TripDetailsPage'\r\nimport ApplicationFormPage from './components/ApplicationFormPage'\r\nimport EditListTripPage from './components/admin/EditListTripsPage'\r\n\r\nfunction Router() {\r\n  return(\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path='/application-form'>\r\n          <ApplicationFormPage />\r\n        </Route>\r\n        <Route exact path='/trips/edit'>\r\n          <EditListTripPage />\r\n        </Route>\r\n        <Route exact path='/login'>\r\n          <LoginPage />\r\n        </Route>\r\n        <Route exact path='/trips/create'>\r\n          <CreateTripPage />\r\n        </Route>\r\n        <Route exact path='/trips/list'>\r\n          <ListTripsPage />\r\n        </Route>\r\n        <Route exact path='/trips/details'>\r\n          <TripDetailsPage />\r\n        </Route>\r\n        <Route exact path='/'>\r\n          <Home />\r\n        </Route>\r\n        <Route path='/'>\r\n          <h1>Página não existente</h1>\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default Router","import React from 'react';\nimport Router from './Router';\n\nfunction App() {\n  return (\n    <main>\n      <Router />\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}